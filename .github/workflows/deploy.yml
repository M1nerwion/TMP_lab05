name: Deploy

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  BUILD_TYPE: Debug

jobs:
  rabota:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
       submodules: recursive

    - name: Install dependencies
      run: |
        sudo apt-get -qq update
        sudo apt-get install -y cmake lcov gcovr python3-pip
        pip install --user cpp-coveralls
        sudo apt-get install -y cmake-data
      # pip install gcovr

      #  sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
      #  sudo apt-get -qq install libgtest-dev

      #  sudo apt-get install google-mock
      #  sudo apt-get install libgtest-dev
      # sudo apt-get install libtbb-dev
      #  sudo apt-get install cmake
      #  cd /usr/src/googletest/
      #  sudo mkdir build
      #  cd build
      #  sudo cmake ..
      # sudo make
      #  sudo cp lib/* /usr/lib

    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
      #run: |
        #cmake -B build -DCMAKE_BUILD_TYPE=${{ matrix.build-type }} -DBUILD_TESTS=ON
      # run: |
      #  cmake -H. -B_build -DBUILD_TESTS=ON
      #  cmake --build _build
      #  cmake --build _build --target test -- ARGS=--verbose

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}/build
      run: ctest -C ${{env.BUILD_TYPE}}

    - name: Install GTest (if not bundled)
      run: |
        sudo apt-get install -y libgtest-dev

    - name: Run tests
      run: |
        cd build && ctest --output-on-failure && ${{github.workspace}}/build/check
        
    #- name: npm install
      #run: npm install

    #- name: Test
      #run: make test-coverage

    # - name: Coverag
    # #  run: coveralls --root . -E ".*gtest.*" -E ".*CMakeFiles.*"
    #   run: |
    #     lcov --directory . --capture --output-file coverage.info --keep-going
    #     lcov --remove coverage.info 'gtest*' '/usr/*' --output-file coverage.info
    #     lcov --list coverage.info 
    #    lcov --summary coverage.info

    # - name: Coveralls
    #   uses: coverallsapp/github-action@master
    #   with:
    #     path-to-lcov: ${{github.workspace}}/build/tests/coverage.info
    #     github-token: ${{ secrets.GITHUB_TOKEN }}
      # coveralls-lcov --repo-token ${COVERALLS_TOKEN} coverage.info
      # find build -name '*.gcda' | xargs gcov
      # coveralls --root . -E ".*gtest.*" -E ".*CMakeFiles.*"
      # coveralls -lcov --repo-token ${COVERALLS_TOKEN} coverage.info

    - name: Coverage
      run: |
        lcov --directory . --capture --output-file coverage.info --ignore-errors mismatch
        lcov --remove coverage.info '*/googletest/*' '/usr/*' --output-file coverage.info
        genhtml coverage.info --output-directory coverage_report --ignore-errors mismatch

    - name: Coveralls
      uses: coverallsapp/github-action@master
      with:
        path-to-lcov: ${{github.workspace}}/coverage.info
        github-token: ${{ secrets.GITHUB_TOKEN }}




    




